"use strict";
let variable = "hello";
variable = null;
//string
let variable2 = "hello"; //type inference
//array
let arr1 = [1, 2, 3, 4];
let arr = [1, 2, 3, 4, "hello"];
//number
let nr1 = 2;
let nr2 = 2.1;
//null, undefined
let nullish = null;
//objects/optional properties
let person = { name: "Eike", age: 28, employed: true };
//let person = {name: "Eike", age:28, employed: true};
person.country = "GER";
let pet = { name: "Petti", age: 2 };
let list = { id: "123", list: [pet] };
class Car {
    constructor(b, count) {
        this.brand = b;
        this.wheelCount = count;
    }
    honk(times) {
        console.log("honked ", times, "times!");
    }
}
//let audi: Car = new Car("Audi", 4);
let audi = new Car("Audi", 4);
//audi.honk("hello"); => not allowed
audi.honk(4);
function sum(a, b) {
    return a + b;
}
//BAD WORKAROUND
let example = "hallo";
example = true;
example = null;
example = [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlYXRzaGVldC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jaGVhdHNoZWV0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFJLFFBQVEsR0FBa0IsT0FBTyxDQUFDO0FBQ3RDLFFBQVEsR0FBRyxJQUFJLENBQUM7QUFFaEIsUUFBUTtBQUNSLElBQUksU0FBUyxHQUFHLE9BQU8sQ0FBQyxDQUFDLGdCQUFnQjtBQUV6QyxPQUFPO0FBQ1AsSUFBSSxJQUFJLEdBQWEsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztBQUMvQixJQUFJLEdBQUcsR0FBd0IsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFFbEQsUUFBUTtBQUNSLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQztBQUNaLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQztBQUVkLGlCQUFpQjtBQUNqQixJQUFJLE9BQU8sR0FBUyxJQUFJLENBQUE7QUFFeEIsNkJBQTZCO0FBQzdCLElBQUksTUFBTSxHQUFtRSxFQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFDLENBQUM7QUFDcEgsc0RBQXNEO0FBQ3RELE1BQU0sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0FBb0J2QixJQUFJLEdBQUcsR0FBUSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBQyxDQUFDO0FBRXZDLElBQUksSUFBSSxHQUFZLEVBQUMsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBQyxDQUFDO0FBRTdDLE1BQU0sR0FBRztJQUlMLFlBQVksQ0FBUyxFQUFFLEtBQWE7UUFDaEMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBRU0sSUFBSSxDQUFDLEtBQWE7UUFDckIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzVDLENBQUM7Q0FDSjtBQUVELHFDQUFxQztBQUNyQyxJQUFJLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFDOUIsb0NBQW9DO0FBQ3BDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFYixTQUFTLEdBQUcsQ0FBQyxDQUFTLEVBQUUsQ0FBUztJQUM3QixPQUFPLENBQUMsR0FBQyxDQUFDLENBQUM7QUFDZixDQUFDO0FBRUQsZ0JBQWdCO0FBQ2hCLElBQUksT0FBTyxHQUFRLE9BQU8sQ0FBQztBQUMzQixPQUFPLEdBQUcsSUFBSSxDQUFDO0FBQ2YsT0FBTyxHQUFHLElBQUksQ0FBQztBQUNmLE9BQU8sR0FBRyxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgdmFyaWFibGU6IHN0cmluZyB8IG51bGwgPSBcImhlbGxvXCI7XHJcbnZhcmlhYmxlID0gbnVsbDtcclxuXHJcbi8vc3RyaW5nXHJcbmxldCB2YXJpYWJsZTIgPSBcImhlbGxvXCI7IC8vdHlwZSBpbmZlcmVuY2VcclxuXHJcbi8vYXJyYXlcclxubGV0IGFycjE6IG51bWJlcltdID0gWzEsMiwzLDRdO1xyXG5sZXQgYXJyOiAobnVtYmVyIHwgc3RyaW5nKVtdID0gWzEsMiwzLDQsIFwiaGVsbG9cIl07XHJcblxyXG4vL251bWJlclxyXG5sZXQgbnIxID0gMjtcclxubGV0IG5yMiA9IDIuMTtcclxuXHJcbi8vbnVsbCwgdW5kZWZpbmVkXHJcbmxldCBudWxsaXNoOiBudWxsID0gbnVsbFxyXG5cclxuLy9vYmplY3RzL29wdGlvbmFsIHByb3BlcnRpZXNcclxubGV0IHBlcnNvbjp7bmFtZTogc3RyaW5nOyBhZ2U6IG51bWJlcjsgZW1wbG95ZWQ6IGJvb2xlYW47IGNvdW50cnk/OnN0cmluZ30gPSB7bmFtZTogXCJFaWtlXCIsIGFnZToyOCwgZW1wbG95ZWQ6IHRydWV9O1xyXG4vL2xldCBwZXJzb24gPSB7bmFtZTogXCJFaWtlXCIsIGFnZToyOCwgZW1wbG95ZWQ6IHRydWV9O1xyXG5wZXJzb24uY291bnRyeSA9IFwiR0VSXCI7XHJcblxyXG5pbnRlcmZhY2UgUGVyc29ue1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgYWdlOiBudW1iZXI7XHJcbiAgICBlbXBsb3llZDogYm9vbGVhbjtcclxuICAgIGNvdW50cnk/OnN0cmluZztcclxufVxyXG5cclxuaW50ZXJmYWNlIFBldHtcclxuICAgIC8vbmFtZTogc3RyaW5nO1xyXG4gICAgYWdlOiBudW1iZXI7XHJcbiAgICBvd25lcj86IFBlcnNvbjtcclxufVxyXG5cclxuaW50ZXJmYWNlIFBldExpc3R7XHJcbiAgICBpZDogc3RyaW5nO1xyXG4gICAgbGlzdDogUGV0W107XHJcbn1cclxuXHJcbmxldCBwZXQ6IFBldCA9IHtuYW1lOiBcIlBldHRpXCIsIGFnZTogMn07XHJcblxyXG5sZXQgbGlzdDogUGV0TGlzdCA9IHtpZDogXCIxMjNcIiwgbGlzdDogW3BldF19O1xyXG5cclxuY2xhc3MgQ2Fye1xyXG4gICAgcHVibGljIGJyYW5kOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIHdoZWVsQ291bnQ6IG51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihiOiBzdHJpbmcsIGNvdW50OiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLmJyYW5kID0gYjtcclxuICAgICAgICB0aGlzLndoZWVsQ291bnQgPSBjb3VudDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaG9uayh0aW1lczogbnVtYmVyKTogdm9pZHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcImhvbmtlZCBcIiwgdGltZXMsIFwidGltZXMhXCIpO1xyXG4gICAgfVxyXG59XHJcblxyXG4vL2xldCBhdWRpOiBDYXIgPSBuZXcgQ2FyKFwiQXVkaVwiLCA0KTtcclxubGV0IGF1ZGkgPSBuZXcgQ2FyKFwiQXVkaVwiLCA0KTtcclxuLy9hdWRpLmhvbmsoXCJoZWxsb1wiKTsgPT4gbm90IGFsbG93ZWRcclxuYXVkaS5ob25rKDQpO1xyXG5cclxuZnVuY3Rpb24gc3VtKGE6IG51bWJlciwgYjogbnVtYmVyKTogbnVtYmVye1xyXG4gICAgcmV0dXJuIGErYjtcclxufVxyXG5cclxuLy9CQUQgV09SS0FST1VORFxyXG5sZXQgZXhhbXBsZTogYW55ID0gXCJoYWxsb1wiO1xyXG5leGFtcGxlID0gdHJ1ZTtcclxuZXhhbXBsZSA9IG51bGw7XHJcbmV4YW1wbGUgPSBbXTsiXX0=